{"ast":null,"code":"import { fork, call } from 'redux-saga/effects';\nimport { errors, success, LOGIN } from '../actions/actionType'; // import { loginRequest } from '../api'\n\nimport axios from 'axios';\nexport function* loginRequestFlow(user) {\n  const token = yield select(selectToken);\n  const headerParams = {\n    Authorization: `JWT ${token}`\n  };\n\n  try {\n    yield call(axios.post('https://reqres.in/api/login/', user, {\n      headers: headerParams\n    }));\n    yield call(success(user));\n  } catch {\n    yield call(errors(user));\n  }\n} // export function* loginRequestFlow(user) {\n//     const apiCall = (user) => {\n//         return axios.post('https://reqres.in/api/login/', user)\n//             .then(response => response.data)\n//             .catch(err => {\n//                 throw err;\n//             });\n//     }\n//     try {\n//         yield call(apiCall)\n//         yield call(success(user))\n//     } catch {\n//         yield call(errors(user))\n//     }\n// }\n\nexport function* loginRequestFinal() {\n  yield call(LOGIN, loginRequestFlow);\n}\nexport function* rootSaga() {\n  yield fork(loginRequestFinal);\n}","map":{"version":3,"sources":["/Users/ling/Documents/GitHub/redux-middleware-login/src/saga/rootSaga.js"],"names":["fork","call","errors","success","LOGIN","axios","loginRequestFlow","user","token","select","selectToken","headerParams","Authorization","post","headers","loginRequestFinal","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,uBAAvC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,UAAUC,gBAAV,CAA2BC,IAA3B,EAAiC;AACpC,QAAMC,KAAK,GAAG,MAAMC,MAAM,CAACC,WAAD,CAA1B;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,aAAa,EAAG,OAAMJ,KAAM;AADX,GAArB;;AAGA,MAAI;AACA,UAAMP,IAAI,CAACI,KAAK,CAACQ,IAAN,CAAW,8BAAX,EAA2CN,IAA3C,EAAiD;AAAEO,MAAAA,OAAO,EAAEH;AAAX,KAAjD,CAAD,CAAV;AACA,UAAMV,IAAI,CAACE,OAAO,CAACI,IAAD,CAAR,CAAV;AACH,GAHD,CAGE,MAAM;AACJ,UAAMN,IAAI,CAACC,MAAM,CAACK,IAAD,CAAP,CAAV;AACH;AACJ,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,UAAUQ,iBAAV,GAA8B;AACjC,QAAMd,IAAI,CAACG,KAAD,EAAQE,gBAAR,CAAV;AACH;AAED,OAAO,UAAUU,QAAV,GAAqB;AACxB,QAAMhB,IAAI,CAACe,iBAAD,CAAV;AACH","sourcesContent":["import { fork, call } from 'redux-saga/effects'\nimport { errors, success, LOGIN } from '../actions/actionType'\n// import { loginRequest } from '../api'\nimport axios from 'axios'\n\nexport function* loginRequestFlow(user) {\n    const token = yield select(selectToken);\n    const headerParams = {\n        Authorization: `JWT ${token}`\n    };\n    try {\n        yield call(axios.post('https://reqres.in/api/login/', user, { headers: headerParams }))\n        yield call(success(user))\n    } catch {\n        yield call(errors(user))\n    }\n}\n\n\n// export function* loginRequestFlow(user) {\n//     const apiCall = (user) => {\n//         return axios.post('https://reqres.in/api/login/', user)\n//             .then(response => response.data)\n//             .catch(err => {\n//                 throw err;\n//             });\n//     }\n//     try {\n//         yield call(apiCall)\n//         yield call(success(user))\n//     } catch {\n//         yield call(errors(user))\n//     }\n// }\n\nexport function* loginRequestFinal() {\n    yield call(LOGIN, loginRequestFlow);\n}\n\nexport function* rootSaga() {\n    yield fork(loginRequestFinal)\n}\n"]},"metadata":{},"sourceType":"module"}