{"ast":null,"code":"import { fork, call, put } from 'redux-saga/effects';\nimport { errors, success, LOGIN } from '../actions/actionType'; // import { loginRequest } from '../api'\n\nimport axios from 'axios';\nexport function* loginRequestFlow(user) {\n  yield put(user.login);\n\n  try {\n    yield call(() => axios.post('https://reqres.in/api/login/', user));\n    yield put(success(user));\n  } catch (error) {\n    yield put(errors(error));\n  }\n}\nexport function* loginRequestFinal() {\n  yield call(LOGIN, loginRequestFlow);\n}\nexport function* rootSaga() {\n  yield fork(loginRequestFinal);\n} // export function* loginRequestFlow(user) {\n//     const apiCall = (user) => {\n//         return axios.post('https://reqres.in/api/login/', user)\n//             .then(response => response.data)\n//             .catch(err => {\n//                 throw err;\n//             });\n//     }\n//     try {\n//         yield call(apiCall)\n//         yield call(success(user))\n//     } catch {\n//         yield call(errors(user))\n//     }\n// }","map":{"version":3,"sources":["/Users/ling/Documents/GitHub/redux-middleware-login/src/saga/rootSaga.js"],"names":["fork","call","put","errors","success","LOGIN","axios","loginRequestFlow","user","login","post","error","loginRequestFinal","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,uBAAvC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,UAAUC,gBAAV,CAA2BC,IAA3B,EAAiC;AACpC,QAAMN,GAAG,CAACM,IAAI,CAACC,KAAN,CAAT;;AACA,MAAI;AACA,UAAMR,IAAI,CAAC,MAAMK,KAAK,CAACI,IAAN,CAAW,8BAAX,EAA2CF,IAA3C,CAAP,CAAV;AACA,UAAMN,GAAG,CAACE,OAAO,CAACI,IAAD,CAAR,CAAT;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZ,UAAMT,GAAG,CAACC,MAAM,CAACQ,KAAD,CAAP,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMX,IAAI,CAACI,KAAD,EAAQE,gBAAR,CAAV;AACH;AAED,OAAO,UAAUM,QAAV,GAAqB;AACxB,QAAMb,IAAI,CAACY,iBAAD,CAAV;AACH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { fork, call, put } from 'redux-saga/effects'\nimport { errors, success, LOGIN } from '../actions/actionType'\n// import { loginRequest } from '../api'\nimport axios from 'axios'\n\nexport function* loginRequestFlow(user) {\n    yield put(user.login)\n    try {\n        yield call(() => axios.post('https://reqres.in/api/login/', user));\n        yield put(success(user))\n    } catch (error) {\n        yield put(errors(error))\n    }\n}\nexport function* loginRequestFinal() {\n    yield call(LOGIN, loginRequestFlow);\n}\n\nexport function* rootSaga() {\n    yield fork(loginRequestFinal)\n}\n\n\n// export function* loginRequestFlow(user) {\n//     const apiCall = (user) => {\n//         return axios.post('https://reqres.in/api/login/', user)\n//             .then(response => response.data)\n//             .catch(err => {\n//                 throw err;\n//             });\n//     }\n//     try {\n//         yield call(apiCall)\n//         yield call(success(user))\n//     } catch {\n//         yield call(errors(user))\n//     }\n// }"]},"metadata":{},"sourceType":"module"}