{"ast":null,"code":"import { LOGIN } from '../actions/actionType';\nconst initialState = {\n  user: []\n};\nexport const loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      const isExist = state.user.find(el => el.email === action.user.email);\n      console.log(\"action.user\", action.user); // find email exist in array user\n\n      const data = state.user.map(e => {\n        if (e.password === action.user.password) {\n          return alert(\"Successful!\");\n        }\n\n        console.log(\"action.user.password\", action.user.password);\n        return e;\n      }); // console.log(\"data\", data)\n\n      return { ...state,\n        products: isExist ? data : alert(\"Failed!\")\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/ling/Desktop/thunk-login/src/reducer/loginReducer.js"],"names":["LOGIN","initialState","user","loginReducer","state","action","type","isExist","find","el","email","console","log","data","map","e","password","alert","products"],"mappings":"AAAA,SAASA,KAAT,QAAsB,uBAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,KAAL;AACI,YAAMO,OAAO,GAAGH,KAAK,CAACF,IAAN,CAAWM,IAAX,CAAgBC,EAAE,IAAIA,EAAE,CAACC,KAAH,KAAaL,MAAM,CAACH,IAAP,CAAYQ,KAA/C,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,MAAM,CAACH,IAAlC,EAFJ,CAGI;;AACA,YAAMW,IAAI,GAAGT,KAAK,CAACF,IAAN,CAAWY,GAAX,CAAeC,CAAC,IAAI;AAC7B,YAAIA,CAAC,CAACC,QAAF,KAAeX,MAAM,CAACH,IAAP,CAAYc,QAA/B,EAAyC;AACrC,iBACIC,KAAK,CAAC,aAAD,CADT;AAGH;;AACDN,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,MAAM,CAACH,IAAP,CAAYc,QAAhD;AACA,eAAOD,CAAP;AACH,OARY,CAAb,CAJJ,CAaI;;AACA,aAAO,EACH,GAAGX,KADA;AAEHc,QAAAA,QAAQ,EAAEX,OAAO,GAAGM,IAAH,GAAUI,KAAK,CAAC,SAAD;AAF7B,OAAP;;AAIJ;AACI,aAAOb,KAAP;AApBR;AAsBH,CAvBM","sourcesContent":["import { LOGIN } from '../actions/actionType'\n\nconst initialState = {\n    user: []\n}\nexport const loginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            const isExist = state.user.find(el => el.email === action.user.email)\n            console.log(\"action.user\", action.user)\n            // find email exist in array user\n            const data = state.user.map(e => {\n                if (e.password === action.user.password) {\n                    return (\n                        alert(\"Successful!\")\n                    )\n                }\n                console.log(\"action.user.password\", action.user.password)\n                return e\n            })\n            // console.log(\"data\", data)\n            return {\n                ...state,\n                products: isExist ? data : alert(\"Failed!\"),\n            };\n        default:\n            return state;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}