{"ast":null,"code":"import { fork, call, put } from 'redux-saga/effects';\nimport { errors, success, LOGIN } from '../actions/actionType'; // import { loginRequest } from '../api'\n\nimport axios from 'axios';\nexport const createRequest = user => {\n  return axios.post('https://reqres.in/api/login/', user);\n};\nexport function* loginRequestFlow(user) {\n  yield put(user.login);\n\n  try {\n    yield call(() => axios.post('https://reqres.in/api/login/', user));\n    yield put(createRequest);\n    yield put(success(user));\n  } catch (error) {\n    yield put(errors(error));\n  }\n} // export function* loginRequestFlow(user) {\n//     const apiCall = (user) => {\n//         return axios.post('https://reqres.in/api/login/', user)\n//             .then(response => response.data)\n//             .catch(err => {\n//                 throw err;\n//             });\n//     }\n//     try {\n//         yield call(apiCall)\n//         yield call(success(user))\n//     } catch {\n//         yield call(errors(user))\n//     }\n// }\n\nexport function* loginRequestFinal() {\n  yield call(LOGIN, loginRequestFlow);\n}\nexport function* rootSaga() {\n  yield fork(loginRequestFinal);\n}","map":{"version":3,"sources":["/Users/ling/Documents/GitHub/redux-middleware-login/src/saga/rootSaga.js"],"names":["fork","call","put","errors","success","LOGIN","axios","createRequest","user","post","loginRequestFlow","login","error","loginRequestFinal","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,uBAAvC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAOF,KAAK,CAACG,IAAN,CAAW,8BAAX,EAA2CD,IAA3C,CAAP;AACH,CAFM;AAIP,OAAO,UAAUE,gBAAV,CAA2BF,IAA3B,EAAiC;AACpC,QAAMN,GAAG,CAACM,IAAI,CAACG,KAAN,CAAT;;AACA,MAAI;AACA,UAAMV,IAAI,CAAC,MAAMK,KAAK,CAACG,IAAN,CAAW,8BAAX,EAA2CD,IAA3C,CAAP,CAAV;AACA,UAAMN,GAAG,CAACK,aAAD,CAAT;AACA,UAAML,GAAG,CAACE,OAAO,CAACI,IAAD,CAAR,CAAT;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZ,UAAMV,GAAG,CAACC,MAAM,CAACS,KAAD,CAAP,CAAT;AACH;AACJ,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMZ,IAAI,CAACI,KAAD,EAAQK,gBAAR,CAAV;AACH;AAED,OAAO,UAAUI,QAAV,GAAqB;AACxB,QAAMd,IAAI,CAACa,iBAAD,CAAV;AACH","sourcesContent":["import { fork, call, put } from 'redux-saga/effects'\nimport { errors, success, LOGIN } from '../actions/actionType'\n// import { loginRequest } from '../api'\nimport axios from 'axios'\n\nexport const createRequest = (user) => {\n    return axios.post('https://reqres.in/api/login/', user)\n}\n\nexport function* loginRequestFlow(user) {\n    yield put(user.login)\n    try {\n        yield call(() => axios.post('https://reqres.in/api/login/', user));\n        yield put(createRequest)\n        yield put(success(user))\n    } catch (error) {\n        yield put(errors(error))\n    }\n}\n\n\n// export function* loginRequestFlow(user) {\n//     const apiCall = (user) => {\n//         return axios.post('https://reqres.in/api/login/', user)\n//             .then(response => response.data)\n//             .catch(err => {\n//                 throw err;\n//             });\n//     }\n//     try {\n//         yield call(apiCall)\n//         yield call(success(user))\n//     } catch {\n//         yield call(errors(user))\n//     }\n// }\n\nexport function* loginRequestFinal() {\n    yield call(LOGIN, loginRequestFlow);\n}\n\nexport function* rootSaga() {\n    yield fork(loginRequestFinal)\n}\n"]},"metadata":{},"sourceType":"module"}